name: GitHub_Data_Collector CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker buildx build -t tharushisamara/github-data-collector:latest --file ./GitHub_Data_Collector/Dockerfile --platform linux/amd64,linux/arm64 --push .
    
    - name: Connect with EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull tharushisamara/github-data-collector:latest

    - name: Start minikube
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          minikube start

    - name: Deploy to Minikube
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl apply -f github_data_collector_deployment.yml    
          kubectl get pods
      # run: |
      #     whoami
        # kubectl apply -f ./K8s/github_data_collector_deployment.yml    
        # kubectl get pods

        # kubectl wait --for=condition=available --timeout=150s deployment/github-data-collector 
    
    - name: Getting Minikube IP
      run: |
        minikube ip
        kubectl get service github-data-collector-service  -o=jsonpath='{.spec.ports[0].nodePort}'

    - name: Expose deployment
      run: |
        kubectl get pods
        kubectl expose deployment github-data-collector --type=NodePort --port=80

    - name: Expose Minikube service externally (for demo purposes)
      run: |
        minikube service github-data-collector-service --url
        
    - name: Get github-data-collector-service
      run: |       
        kubectl get svc
