name: Data_Storage CI/CD

on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
env:
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up Docker CLI
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker buildx build -t tharushisamara/data-storage:latest --file ./Data_Storage/Dockerfile --platform linux/amd64,linux/arm64 --push .

    - name: Deploy to Minikube on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl apply -f K8s/data_storage_deployment.yml

    - name: Set up DynamoDB Table
      run: |
        # Add steps to set up DynamoDB table, e.g., using AWS CLI
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}
        aws dynamodb create-table --table-name Developer-Tracking-Data --attribute-definitions AttributeName=owner,AttributeType=S AttributeName=repo,AttributeType=S --key-schema AttributeName=owner,KeyType=HASH AttributeName=repo,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5

        # Wait for DynamoDB table creation to complete
        aws dynamodb wait table-exists --table-name Developer-Tracking-Data

    - name: Expose Minikube service externally (for demo purposes)
      run: |
        sudo minikube service data-storage --url
