name: Data_Storage CI/CD

on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
env:
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up Docker CLI
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker buildx build -t tharushisamara/data-storage:latest --file ./Data_Storage/Dockerfile --platform linux/amd64,linux/arm64 --push .

    - name: Deploy to Minikube on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull tharushisamara/data-storage:latest
          
    - name: Copy deployemnt file to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./K8s/data_storage_deployment.yml"
        target: "/home/${{ secrets.EC2_USERNAME }}/"

    - name: Set Environment Variables on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
            echo "export aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.bashrc
            echo "export aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.bashrc
            source ~/.bashrc

    - name: Delete Kubernetes Service if exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl delete -f ./K8s/data_storage_deployment.yml || true

          kubectl wait --for=delete service/data-storage --timeout=300s || echo "Service not found or deletion completed"


    - name: Deploy to Minikube
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl apply -f ./K8s/data_storage_deployment.yml    
          kubectl get pods

          kubectl wait --for=condition=available --timeout=150s deployment/data-storage 
      
    - name: Getting Minikube IP
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          minikube ip
          kubectl get service data-storage-service  -o=jsonpath='{.spec.ports[0].nodePort}' 

    - name: Delete Kubernetes Service if exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl delete service data-storage --ignore-not-found
          
    - name: Expose deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          kubectl get pods
          kubectl expose deployment data-storage --type=NodePort --port=5003

    - name: Expose Minikube service externally (for demo purposes)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          minikube service data-storage --url
          kubectl get svc	

